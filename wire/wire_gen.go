// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/ChongYanOvO/little-blue-book/bootstrap"
	"github.com/ChongYanOvO/little-blue-book/internal/repository"
	"github.com/ChongYanOvO/little-blue-book/internal/repository/cache"
	"github.com/ChongYanOvO/little-blue-book/internal/repository/dao"
	"github.com/ChongYanOvO/little-blue-book/internal/service"
	"github.com/ChongYanOvO/little-blue-book/internal/service/sms"
	"github.com/ChongYanOvO/little-blue-book/internal/web"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitServer() (*gin.Engine, error) {
	viper := bootstrap.NewViper()
	config := bootstrap.NewConfig(viper)
	db := bootstrap.NewMysql(config)
	logger := bootstrap.NewZap(config)
	userDao := dao.NewUserDao(db, logger)
	cmdable := bootstrap.NewRedis(config)
	userCache := cache.NewRedisUserCache(cmdable, logger)
	userRepository := repository.NewUserRepository(userDao, userCache, logger)
	userService := service.NewUserService(userRepository, logger)
	codeCache := cache.NewCodeCache(cmdable, logger)
	codeRepository := repository.NewCodeRepository(codeCache, logger)
	smsService := sms.NewMemoryService(logger)
	codeService := service.NewCodeService(codeRepository, smsService, logger)
	userHandler := web.NewUserHandler(userService, codeService, logger)
	engine := bootstrap.NewWeb(userHandler)
	return engine, nil
}

func InitConfig() (*bootstrap.Config, error) {
	viper := bootstrap.NewViper()
	config := bootstrap.NewConfig(viper)
	return config, nil
}

// wire.go:

var BootstrapProviderSet = wire.NewSet(bootstrap.NewViper, bootstrap.NewConfig, bootstrap.NewMysql, bootstrap.NewZap, bootstrap.NewRedis, bootstrap.NewWeb)

var CacheProviderSet = wire.NewSet(cache.NewRedisUserCache, cache.NewCodeCache)

var DaoProviderSet = wire.NewSet(dao.NewUserDao)

var RepositoryProviderSet = wire.NewSet(repository.NewUserRepository, repository.NewCodeRepository)

var SmsProviderSet = wire.NewSet(sms.NewMemoryService)

var ServiceProviderSet = wire.NewSet(service.NewUserService, service.NewCodeService)

var WebProviderSet = wire.NewSet(web.NewUserHandler)
